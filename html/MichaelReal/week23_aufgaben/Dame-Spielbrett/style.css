body, html {
    margin: 0; /* Entfernt den Standardrand um den `body` und `html`, der von den Browsern hinzugefügt wird. */
    height: 100%; /* Setzt die Höhe von `body` und `html` auf 100% der sichtbaren Fensterhöhe. */
    display: flex; /* Aktiviert Flexbox für `body` und `html`, ein Layoutmodell, das es einfacher macht, Elemente in einer Zeile oder Spalte (je nach flex-direction) anzuordnen. */
    justify-content: center; /* Zentriert die Kinder des Flex-Containers horizontal in der Mitte. */
    align-items: center; /* Zentriert die Kinder des Flex-Containers vertikal in der Mitte. */
    background-color: #f7f7f7; /* Setzt die Hintergrundfarbe von `body` und `html` auf ein leichtes Grau. */
}

.game-board {
    display: flex; /* Schaltet Flexbox für das Spielbrett ein. Das ist ein Layout-Modell, das einfacheres Ausrichten von Elementen innerhalb des Containers ermöglicht. */
    flex-wrap: wrap; /* Erlaubt Flex-Elementen, in eine neue Zeile zu "umfließen", wenn nicht genug Platz in der aktuellen Zeile vorhanden ist. */
    width: 600px; /* Setzt die Gesamtbreite des Spielbretts auf 600px. In diesem Fall ist es breit genug für 12 Spielbrettfelder nebeneinander, wenn jedes Feld 50px breit ist. */
    height: 600px; /* Setzt die Gesamthöhe des Spielbretts auf 600px. Das ist hoch genug für 12 Spielbrettfelder übereinander, wenn jedes Feld 50px hoch ist. */
}

.board-square {
    display: flex; /* Die Flexbox wird aktiviert. Dies ist ein Layoutmodell, das es ermöglicht, Kinder innerhalb dieses Elements leichter zu positionieren. */
    justify-content: center; /* Diese Flexbox-Eigenschaft zentriert die Kinder (in diesem Fall den Kreis) horizontal im `.board-square`. */
    align-items: center; /* Diese Flexbox-Eigenschaft zentriert die Kinder vertikal im `.board-square`. */
    width: 50px; /* Legt die Breite des Quadrats fest. Jedes Feld auf dem Spielbrett wird 50 Pixel breit sein. */
    height: 50px; /* Legt die Höhe des Quadrats fest. Jedes Feld auf dem Spielbrett wird 50 Pixel hoch sein. */
}

.board-row {
    display: flex;
    width: 100%;
}

.circle {
    width: 20px; /* Setzt die Breite des Kreises auf 20 Pixel. */
    height: 20px; /* Setzt die Höhe des Kreises auf 20 Pixel. Da Breite und Höhe gleich sind, ergibt dies ein Quadrat. */
    background-color: #c0c0c0; /* Färbt den Kreis in einem mittleren Grauton. Du kannst diesen Wert ändern, um verschiedene Farben zu verwenden. */
    border-radius: 50%; /* Diese Eigenschaft rundet die Ecken des Quadrats so stark ab, dass es als Kreis erscheint. */
}

/* Spezifische Farbklassen */
.white {
    background-color: #fff; /* Weißes Feld */
}

.black {
    background-color: #000; /* Schwarzes Feld */
}

/* Alternierende Farben für das Schachbrettmuster 
.game-board .board-square:nth-child(odd) {
    background-color: #fff;
}

.game-board .board-square:nth-child(even) {
    background-color: #000;



.game-board: Dies ist der Selektor, der das Elternelement auswählt, welches die Klasse game-board hat. Es ist der Container, in dem sich alle Spielfelder befinden.

.board-square: Dieser Selektor wählt alle Elemente innerhalb von .game-board aus, die die Klasse board-square haben. Diese repräsentieren die individuellen Spielfelder.

:nth-child(odd): Dies ist ein Pseudo-Klassen-Selektor, der spezifische Kinder auswählt, basierend auf ihrer Reihenfolge innerhalb des Elternelements. nth-child(odd) wählt alle Kinder aus, die eine ungerade Position haben (also das 1., 3., 5. Kind, usw.).

background-color: #fff;: Dies ist die CSS-Eigenschaft und der Wert, der angewendet wird. Er setzt die Hintergrundfarbe des ausgewählten Elements auf Weiß (#fff).
}*/
